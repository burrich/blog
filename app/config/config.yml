imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: ivory/ivory_ckeditor.yml }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources: 
            - 'bootstrap_3_layout.html.twig'
            - 'SonataFormatterBundle:Form:formatter.html.twig'

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

        # entity_managers:
        #     default:
        #         mappings:
        #             ApplicationSonataUserBundle: ~
        #             SonataUserBundle: ~
        #             ...

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# Sonata
sonata_block:
    default_contexts: [cms]
    blocks:
        # Enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts:   [admin]
        # Your other blocks
        sonata.user.block.menu:
        sonata.block.service.text:
        sonata.user.block.account:
        sonata.user.block.profil:

sonata_admin:
    title: Welcome to Twin Peaks

    options:
        html5_validate: false

    templates:
        # default global templates
        layout:  SonataAdminBundle::layout.html.twig

sonata_user:
    profile:
        # Profile show page is a dashboard as in SonataAdminBundle
        dashboard:
            blocks:
                - { position: left, type: sonata.user.block.profil }
        # Customize user portal menu by setting links
        menu:
            - { route: 'sonata_user_profile_show', label: 'Profil', domain: 'SonataUserBundle'}
            - { route: 'sonata_user_profile_edit_authentication', label: 'Préférences', domain: 'SonataUserBundle'}
            - { route: 'sonata_user_security_logout', label: 'Déconnexion', domain: 'SonataUserBundle'}

        form:
            type:               application_sonata_user_profile # custom type (default : sonata_user_profile)
            handler:            sonata.user.profile.form.handler.default
            name:               sonata_user_profile_form
            # validation_groups:  [Profile]

sonata_formatter:
    formatters:
        # markdown:
        #     service: sonata.formatter.text.markdown
        #     extensions:
        #         - sonata.formatter.twig.control_flow
        #         - sonata.formatter.twig.gist
        #         - sonata.media.formatter.twig

        # text:
        #     service: sonata.formatter.text.text
        #     extensions:
        #         - sonata.formatter.twig.control_flow
        #         - sonata.formatter.twig.gist
        #         - sonata.media.formatter.twig

        # rawhtml:
        #     service: sonata.formatter.text.raw
        #     extensions:
        #         - sonata.formatter.twig.control_flow
        #         - sonata.formatter.twig.gist
        #         - sonata.media.formatter.twig

        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig

        # twig:
        #     service: sonata.formatter.text.twigengine
        #     extensions: [] # Twig formatter cannot have extensions

# FOSUserBundle
fos_user:
    db_driver:     orm
    firewall_name: main
    user_class:    Application\Sonata\UserBundle\Entity\User

    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager

    service:
        user_manager: sonata.user.orm.user_manager

    # profile:  # Authentication Form
    #     form:
    #         type:               fos_user_profile
    #         handler:            fos_user.profile.form.handler.default
    #         name:               fos_user_profile_form
    #         # validation_groups:  [Authentication]

# Intl
services:
    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }

# Doctrine extensions
stof_doctrine_extensions:
    default_locale: %locale%
    orm:
        default:
            sluggable: true

sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

    cdn:
        server:
            path: /sites/blog/web/uploads/media  #/uploads/media TODO: mettre un chemin propre

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false

    # providers:
    #     image:
    #         resizer: sonata.media.resizer.square